/*!
 * @file Sensor
 * @author Rocco Martino
 */
/***************************************************************************
 *   Copyright (C) 2013 by Rocco Martino                                   *
 *   martinorocco@gmail.com                                                *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU Lesser General Public License as        *
 *   published by the Free Software Foundation; either version 2.1 of the  *
 *   License, or (at your option) any later version.                       *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU Lesser General Public License for more details.                   *
 *                                                                         *
 *   You should have received a copy of the GNU Lesser General Public      *
 *   License along with this program; if not, write to the                 *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

#ifndef _OSGODE_SENSOR_HPP
#define _OSGODE_SENSOR_HPP




/* ======================================================================= */
#include <osgODE/Transformable>
#include <osgODE/ODECallback>
/* ======================================================================= */




namespace osgODE
{




/* ======================================================================= */
/* ....................................................................... */
//! a sensor
/*!
 */
class OSG_EXPORT Sensor: public Transformable
{
/* ======================================================================= */
public:
             Sensor(void) ;
             Sensor(const Sensor& other, const osg::CopyOp& copyop=osg::CopyOp::SHALLOW_COPY) ;

protected:
    virtual ~Sensor(void) ;
/* ======================================================================= */




/* ======================================================================= */
public:
    META_Object(osgODE, Sensor) ;
/* ======================================================================= */




/* ======================================================================= */
public:
    inline void     setPosition( const osg::Vec3& position ) ;
    inline void     setQuaternion( const osg::Quat& quaternion ) ;
    inline void     setRadius( double radius ) ;

    inline const osg::Vec3&     getPosition(void) const ;
    inline const osg::Quat&     getQuaternion(void) const ;
    inline double               getRadius(void) const ;
/* ======================================================================= */




/* ======================================================================= */
public:
    //! Set the callback list
    inline void     setActivationCallback(ODECallback* cbk) ;

    //! Add the callback
    inline void     addActivationCallback(ODECallback* cbk) ;

    //! Remove the callback
    inline void     removeActivationCallback(ODECallback* cbk) ;

    //! Get the callback list
    inline ODECallback* getActivationCallback(void) ;

    //! Get the const callback list
    inline const ODECallback*   getActivationCallback(void) const ;
/* ======================================================================= */




/* ======================================================================= */
public:
    virtual void    postUpdate(double step_size) ;


protected:
    virtual void    interaction(void) ;
/* ======================================================================= */




/* ======================================================================= */
private:
    osg::Vec3   m_position ;
    osg::Quat   m_quaternion ;

    double      m_radius ;


    osg::ref_ptr<ODECallback>   m_callback ;
/* ======================================================================= */
} ;
/* ....................................................................... */
/* ======================================================================= */




} // namespace osgODE




#include "Sensor.inl"




#endif /* _OSGODE_SENSOR_HPP */
