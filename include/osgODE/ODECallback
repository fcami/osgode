/*!
 * @file ODECallback
 * @author Rocco Martino
 */
/***************************************************************************
 *   Copyright (C) 2010 by Rocco Martino                                   *
 *   martinorocco@gmail.com                                                *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU Lesser General Public License as        *
 *   published by the Free Software Foundation; either version 2.1 of the  *
 *   License, or (at your option) any later version.                       *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU Lesser General Public License for more details.                   *
 *                                                                         *
 *   You should have received a copy of the GNU Lesser General Public      *
 *   License along with this program; if not, write to the                 *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

#ifndef _OSGODE_ODECALLBACK_HPP
#define _OSGODE_ODECALLBACK_HPP




/* ======================================================================= */
#include <osg/Object>

#include <osgODE/Config>
/* ======================================================================= */




/* ======================================================================= */
namespace ooGame {
    class   Game ;
}
/* ======================================================================= */




namespace osgODE
{




/* ======================================================================= */
class ODEObject ;
class HingeServoMotor ;
class ServoMotor ;
class SliderServoMotor ;
class UniversalServoMotor ;
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
//! A generic callback
/*!
 */
class OSG_EXPORT ODECallback: public osg::Object
{
/* ======================================================================= */
public:
             ODECallback(void) ;
             ODECallback(const ODECallback& other, const osg::CopyOp& copyop=osg::CopyOp::SHALLOW_COPY) ;

protected:
    virtual ~ODECallback(void) ;
/* ======================================================================= */




/* ======================================================================= */
public:
    META_Object(osgODE, ODECallback) ;
/* ======================================================================= */




/* ======================================================================= */
public:
    //! Set the nested callback
    inline void     setNestedCallback(ODECallback* cbk) ;

    //! Enqueue the callback
    inline void     addNestedCallback(ODECallback* cbk) ;

    //! Remove the callback from the list
    inline void     removeNestedCallback(ODECallback* cbk) ;

    //! Get the nested callback
    inline ODECallback* getNestedCallback(void) ;

    //! Get the const nested callback
    inline const ODECallback*   getNestedCallback(void) const ;


    //! Invoke the next callback
    inline void     traverse(ODEObject* object) ;

    //! where things happen. By default this operator calls traverse(object)
    virtual void    operator()(ODEObject* object) ;
/* ======================================================================= */




/* ======================================================================= */
public:
    //! Quick dynamic cast
    virtual ooGame::Game*           asGame(void) ;

    //! Quick dynamic cast
    virtual HingeServoMotor*        asHingeServoMotor(void) ;

    //! Quick dynamic cast
    virtual ServoMotor*             asServoMotor(void) ;

    //! Quick dynamic cast
    virtual SliderServoMotor*       asSliderServoMotor(void) ;

    //! Quick dynamic cast
    virtual UniversalServoMotor*    asUniversalServoMotor(void) ;
/* ======================================================================= */




/* ======================================================================= */
private:
    osg::ref_ptr<ODECallback>   m_nested_callback ;
/* ======================================================================= */
} ;
/* ....................................................................... */
/* ======================================================================= */




} // namespace osgODE




#include "ODECallback.inl"




#endif /* _OSGODE_ODECALLBACK_HPP */
