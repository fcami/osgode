/*!
 * @file BypassJoint
 * @author Rocco Martino
 */
/***************************************************************************
 *   Copyright (C) 2013 by Rocco Martino                                   *
 *   martinorocco@gmail.com                                                *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU Lesser General Public License as        *
 *   published by the Free Software Foundation; either version 2.1 of the  *
 *   License, or (at your option) any later version.                       *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU Lesser General Public      *
 *   License along with this program; if not, write to the                 *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

#ifndef _OSGODE_BYPASSJOINT_HPP
#define _OSGODE_BYPASSJOINT_HPP




/* ======================================================================= */
#include <osgODE/Joint>
/* ======================================================================= */




namespace osgODE
{




/* ======================================================================= */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
//! Transmits the joint equation
/*!
 *
 */
class OSG_EXPORT BypassJoint: public Joint
{
/* ======================================================================= */
public:
             BypassJoint(void) ;
             BypassJoint(const BypassJoint& other, const osg::CopyOp& copyop=osg::CopyOp::SHALLOW_COPY) ;

protected:
    virtual ~BypassJoint(void) ;
/* ======================================================================= */




/* ======================================================================= */
public:
    META_Object(osgODE, BypassJoint) ;
/* ======================================================================= */









/* ======================================================================= */
public:
    inline void     setERP( int i, ooReal v ) ;
    inline ooReal   getERP( int i ) ;

    inline void     setCFM( int i, ooReal v ) ;
    inline ooReal   getCFM( int i ) ;
/* ======================================================================= */




/* ======================================================================= */
public:
    //! Set the specified row
    void setRow(    unsigned int row,
                    const osg::Vec3& J1a,
                    const osg::Vec3& J1l,
                    const osg::Vec3& J2a,
                    const osg::Vec3& J2l,
                    ooReal rhs,
                    ooReal cfm ) ;



    //! Get the specified row
    void getRow(    unsigned int row,
                    osg::Vec3& J1a,
                    osg::Vec3& J1l,
                    osg::Vec3& J2a,
                    osg::Vec3& J2l,
                    ooReal& rhs,
                    ooReal& cfm ) const ;



    //! Set SureMaxInfo and Info1
    inline void setInfo(    unsigned int max_m,
                            unsigned int m,
                            unsigned int nub ) ;

    //! Get SureMaxInfo and Info1
    inline void getInfo(    unsigned int& max_m,
                            unsigned int& m,
                            unsigned int& nub ) const ;
/* ======================================================================= */




/* ======================================================================= */
public:
    virtual BypassJoint*    asBypassJoint(void) ;
/* ======================================================================= */




/* ======================================================================= */
protected:
    typedef enum {
        CONSTRAIN_NONE  = 0,
        CONSTRAIN_BODY1 = 1,
        CONSTRAIN_BODY2 = 2,
        CONSTRAIN_ALL   = CONSTRAIN_BODY1 | CONSTRAIN_BODY2
    } BodyMask ;


    //! Set the relative quaternion between the bodies
    void    setRelativeRotation(    ooReal              step_size,
                                    const osg::Quat&    qrel,
                                    int&                row,
                                    ooReal              erp = 1.0,
                                    ooReal              cfm = 0.0,
                                    BodyMask            mask = CONSTRAIN_ALL
                               ) ;


    //! Set the distance between the bodies
    void    setRelativePosition(    ooReal              step_size,
                                    const osg::Vec3&    prel,
                                    int&                row,
                                    ooReal              erp = 1.0,
                                    ooReal              cfm = 0.0,
                                    BodyMask            mask = CONSTRAIN_ALL
                               ) ;
/* ======================================================================= */




/* ======================================================================= */
protected:
    virtual dJointID    cloneODEJoint(dWorldID world) const ;
/* ======================================================================= */




/* ======================================================================= */
protected:
    ooReal      m_erp[3] ;
    ooReal      m_cfm[3] ;
/* ======================================================================= */




/* ======================================================================= */
private:
/* ======================================================================= */
} ;
/* ....................................................................... */
/* ======================================================================= */




} // namespace osgODE




#include "BypassJoint.inl"




#endif /* _OSGODE_BYPASSJOINT_HPP */
