/*!
 * @file Transformable.inl
 * @author Rocco Martino
 */
/***************************************************************************
 *   Copyright (C) 2010 by Rocco Martino                                   *
 *   martinorocco@gmail.com                                                *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU Lesser General Public License as        *
 *   published by the Free Software Foundation; either version 2.1 of the  *
 *   License, or (at your option) any later version.                       *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU Lesser General Public License for more details.                   *
 *                                                                         *
 *   You should have received a copy of the GNU Lesser General Public      *
 *   License along with this program; if not, write to the                 *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

#ifndef _OSGODE_TRANSFORMABLE_INL
#define _OSGODE_TRANSFORMABLE_INL

/* ======================================================================= */
/* ....................................................................... */
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline const osgGA::CameraManipulator*
osgODE::Transformable::getCameraManipulator(void) const
{
    return m_camera_manipulator.get() ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline osgGA::CameraManipulator*
osgODE::Transformable::getCameraManipulator(void)
{
    return m_camera_manipulator.get() ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
osgODE::Transformable::setCameraManipulatorCenter(const osg::Vec3& center)
{
    m_camera_manipulator_center = center ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline const osg::Vec3&
osgODE::Transformable::getCameraManipulatorCenter(void) const
{
    return m_camera_manipulator_center ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
osgODE::Transformable::setCameraManipulatorDirection(const osg::Vec3& direction)
{
    m_camera_manipulator_direction = direction ;

    m_camera_manipulator_direction.normalize() ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline const osg::Vec3&
osgODE::Transformable::getCameraManipulatorDirection(void) const
{
    return m_camera_manipulator_direction ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
osgODE::Transformable::setCameraManipulatorUp(const osg::Vec3& up)
{
    m_camera_manipulator_up = up ;

    m_camera_manipulator_up.normalize() ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline const osg::Vec3&
osgODE::Transformable::getCameraManipulatorUp(void) const
{
    return m_camera_manipulator_up ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
osgODE::Transformable::setCameraManipulatorUpObjectSpace(bool flag)
{
    m_camera_manipulator_up_object = flag ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline bool
osgODE::Transformable::getCameraManipulatorUpObjectSpace(void) const
{
    return m_camera_manipulator_up_object ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
osgODE::Transformable::setCameraManipulatorElasticity(unsigned int elasticity)
{
    m_camera_manipulator_elasticity = elasticity ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline unsigned int
osgODE::Transformable::getCameraManipulatorElasticity(void) const
{
    return m_camera_manipulator_elasticity ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
osgODE::Transformable::setMatrixTransform(osg::MatrixTransform* transform)
{
    m_matrix_transform = transform ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline osg::MatrixTransform*
osgODE::Transformable::getMatrixTransform(void)
{
    return m_matrix_transform.get() ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline const osg::MatrixTransform*
osgODE::Transformable::getMatrixTransform(void) const
{
    return m_matrix_transform.get() ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline osg::StateSet*
osgODE::Transformable::getOrCreateStateSet(void)
{
    return m_matrix_transform->getOrCreateStateSet() ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline osg::StateSet*
osgODE::Transformable::getStateSet(void)
{
    return m_matrix_transform->getStateSet() ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline const osg::StateSet*
osgODE::Transformable::getStateSet(void) const
{
    return m_matrix_transform->getStateSet() ;
}
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
inline void
osgODE::Transformable::setStateSet(osg::StateSet* stateset)
{
    return m_matrix_transform->setStateSet(stateset) ;
}
/* ....................................................................... */
/* ======================================================================= */




#endif /* _OSGODE_TRANSFORMABLE_INL */
