/*!
 * @file FixedJoint
 * @author Rocco Martino
 */
/***************************************************************************
 *   Copyright (C) 2010 - 2013 by Rocco Martino                            *
 *   martinorocco@gmail.com                                                *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU Lesser General Public License as        *
 *   published by the Free Software Foundation; either version 2.1 of the  *
 *   License, or (at your option) any later version.                       *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU Lesser General Public License for more details.                   *
 *                                                                         *
 *   You should have received a copy of the GNU Lesser General Public      *
 *   License along with this program; if not, write to the                 *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

#ifndef _OSGODE_FIXEDJOINT_HPP
#define _OSGODE_FIXEDJOINT_HPP




/* ======================================================================= */
#include <osgODE/BypassJoint>
/* ======================================================================= */




namespace osgODE
{




/* ======================================================================= */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
//! Constant relative position and rotation
/*!
 */
class OSG_EXPORT FixedJoint: public BypassJoint
{
/* ======================================================================= */
public:
             FixedJoint(void) ;
             FixedJoint(const FixedJoint& other, const osg::CopyOp& copyop=osg::CopyOp::SHALLOW_COPY) ;

protected:
    virtual ~FixedJoint(void) ;
/* ======================================================================= */




/* ======================================================================= */
public:
    META_Object(osgODE, FixedJoint) ;
/* ======================================================================= */









/* ======================================================================= */
public:
    //! Set whether to constrain only the second body. Default: false
    inline void     setOnewayMode( bool oneway_mode ) ;

    //! Set whether to constrain only the second body. Default: false
    inline bool     getOnewayMode(void) const ;


    //! Set whether to constrain the relative rotation. Default: true
    inline void     setRotationMode( bool rotation_mode ) ;

    //! Set whether to constrain the relative rotation. Default: true
    inline bool     getRotationMode(void) const ;


    //! Set whether to constrain the relative position. Default: true
    inline void     setPositionMode( bool position_mode ) ;

    //! Set whether to constrain the relative position. Default: true
    inline bool     getPositionMode(void) const ;


    //! Set whether to compute the relative transformation. Default: true
    inline void     setComputeMatrix( bool compute_matrix ) ;

    //! Set whether to compute the relative transformation. Default: true
    inline bool     getComputeMatrix(void) const ;
/* ======================================================================= */









/* ======================================================================= */
public:
    //! Set the matrix that transforms body1 to body2
    inline void                 setMatrix( const osg::Matrix& matrix ) ;

    //! Get the matrix that transforms body1 to body2
    inline const osg::Matrix&   getMatrix(void) const ;
/* ======================================================================= */









/* ======================================================================= */
protected:
    virtual void        update( ooReal step_size ) ;
    virtual void        finalize(void) ;

    //! Quick dynamic cast
    virtual FixedJoint*             asFixedJoint(void) ;
/* ======================================================================= */




/* ======================================================================= */
private:
    bool    m_oneway_mode ;
    bool    m_rotation_mode ;
    bool    m_position_mode ;
    bool    m_compute_matrix ;

    osg::Matrix     m_matrix ;
    osg::Quat       m_quat ;
    osg::Vec3       m_pos ;
/* ======================================================================= */
} ;
/* ....................................................................... */
/* ======================================================================= */




} // namespace osgODE




#include "FixedJoint.inl"




#endif /* _OSGODE_FIXEDJOINT_HPP */
