/*!
 * @file Notify_android
 * @author Rocco Martino
 */
/***************************************************************************
 *   Copyright (C) 2010 - 2011 by Rocco Martino                            *
 *   martinorocco@gmail.com                                                *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU Lesser General Public License as        *
 *   published by the Free Software Foundation; either version 2.1 of the  *
 *   License, or (at your option) any later version.                       *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU Lesser General Public License for more details.                   *
 *                                                                         *
 *   You should have received a copy of the GNU Lesser General Public      *
 *   License along with this program; if not, write to the                 *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

#ifndef _OSGODE_NOTIFY_ANDROID_H
#define _OSGODE_NOTIFY_ANDROID_H




/* ======================================================================= */
#include <android/log.h>
#include <assert.h>
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
#ifdef __cplusplus
extern "C" OSG_EXPORT void  psInstallAndroidNotifyHandler(void) ;
#else
extern OSG_EXPORT void      psInstallAndroidNotifyHandler(void) ;
#endif
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
#if PS_VERBOSE
 #define        PS_MESSAGE(FMT, ARGS...) \
 { \
    if(psLogLevel <= LOG_LEVEL_MESSAGE) { \
        __android_log_print(ANDROID_LOG_VERBOSE, PS_MSG_PREFIX, FMT, ARGS) ; \
    } \
}
#else
 #define        PS_MESSAGE(FMT, ARGS)
#endif
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
#if PS_VERBOSE
 #define        PS_WARN(FMT, ARGS...) \
 { \
    if(psLogLevel <= LOG_LEVEL_WARNING) { \
        __android_log_print(ANDROID_LOG_WARN, PS_MSG_PREFIX, FMT, ARGS) ; \
    } \
}
#else
 #define        PS_WARN(FMT, ARGS)
#endif
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
#if PS_VERBOSE
 #define        PS_FATAL(FMT, ARGS...) \
 { \
    if(psLogLevel <= LOG_LEVEL_FATAL) { \
        __android_log_print(ANDROID_LOG_ERROR, PS_MSG_PREFIX, FMT, ARGS) ; \
    } \
}
#else
 #define        PS_FATAL(FMT, ARGS...)
#endif
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
#if PS_VERBOSE
 #define        PS_DBG(FMT, ARGS...) \
 { \
    if(psLogLevel <= LOG_LEVEL_DEBUG) { \
        __android_log_print(ANDROID_LOG_DEBUG, PS_MSG_PREFIX, FMT, ARGS) ; \
    } \
}
#else
 #define        PS_DBG(FMT, ARGS...)
#endif
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
#if PS_VERBOSE
 #define        PS_DBG2(FMT, ARGS...) \
 { \
    if(psLogLevel <= LOG_LEVEL_DEBUG2) { \
        __android_log_print(ANDROID_LOG_DEBUG, PS_MSG_PREFIX, FMT, ARGS) ; \
    } \
}
#else
 #define        PS_DBG2(FMT, ARGS...)
#endif
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
#if PS_VERBOSE
 #define        PS_DBG3(FMT, ARGS...) \
 { \
    if(psLogLevel <= LOG_LEVEL_DEBUG3) { \
        __android_log_print(ANDROID_LOG_DEBUG, PS_MSG_PREFIX, FMT, ARGS) ; \
    } \
}
#else
 #define        PS_DBG3(FMT, ARGS...)
#endif
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
#if PS_VERBOSE
 #define        PS_CCALL(CCALL, CONDITION, VALUE) \
 { \
    unsigned int    ps_ccall_return_value = (unsigned int)CCALL ; \
    if( ! (ps_ccall_return_value CONDITION (unsigned int)VALUE) && (psLogLevel <= LOG_LEVEL_DEBUG) ) { \
        PS_DBG("%s : 0x%x: %s", #CCALL, ps_ccall_return_value, strerror(errno)) ; \
    } else { \
        PS_DBG3("%s : 0x%x", #CCALL, ps_ccall_return_value) ; \
    } \
 }
#else
 #define        PS_CCALL(CCALL, CONDITION, VALUE) \
    CCALL ;
#endif
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
#if PS_ASSERT_ENABLED
#define     PS_BREAKPOINT() assert(0)
#else
 #define        PS_BREAKPOINT()
#endif
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
#if PS_ASSERT_ENABLED
 #define        PS_ASSERT(EXPRESSION) \
 { \
    if( ! (EXPRESSION) ) { \
        PS_DBG("\"%s\" failed", #EXPRESSION) ; \
        assert(EXPRESSION) ; \
    } \
 }
#else
 #define        PS_ASSERT(EXPRESSION) \
 { \
    (void) (EXPRESSION) ; \
 }
#endif
/* ....................................................................... */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
#if PS_ASSERT_ENABLED
 #define        PS_ASSERT1(EXPRESSION)  PS_ASSERT(EXPRESSION)
#else
 #define        PS_ASSERT1(EXPRESSION)
#endif
/* ....................................................................... */
/* ======================================================================= */




#endif /* _OSGODE_NOTIFY_ANDROID_H */
