/*!
 * @file NoGravityVolume
 * @author Rocco Martino
 */
/***************************************************************************
 *   Copyright (C) 2013 by Rocco Martino                                   *
 *   martinorocco@gmail.com                                                *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU Lesser General Public License as        *
 *   published by the Free Software Foundation; either version 2.1 of the  *
 *   License, or (at your option) any later version.                       *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

#ifndef _OSGODE_NOGRAVITYVOLUME_HPP
#define _OSGODE_NOGRAVITYVOLUME_HPP




/* ======================================================================= */
#include <osgODE/Sphere>
/* ======================================================================= */




namespace osgODE
{




/* ======================================================================= */
/* ======================================================================= */




/* ======================================================================= */
/* ....................................................................... */
//!
/*!
 *
 */
class OSG_EXPORT NoGravityVolume: public Sphere
{
/* ======================================================================= */
public:
             NoGravityVolume(void) ;
             NoGravityVolume(const NoGravityVolume& other, const osg::CopyOp& copyop=osg::CopyOp::SHALLOW_COPY) ;

protected:
    virtual ~NoGravityVolume(void) ;
/* ======================================================================= */




/* ======================================================================= */
public:
    META_Object(osgODE, NoGravityVolume) ;
/* ======================================================================= */









/* ======================================================================= */
public:
    inline void     addCollidable(Collidable* collidable) ;
/* ======================================================================= */




/* ======================================================================= */
public:
    //! Add the NoGravityVolumeCollisionCallbacl
    void    setupCallbacks(void) ;
/* ======================================================================= */




/* ======================================================================= */
public:
    virtual void                postUpdate(double step_size) ;

    //! Quick dynamic_cast
    virtual NoGravityVolume*    asNoGravityVolume(void) ;
/* ======================================================================= */




/* ======================================================================= */
private:
    typedef std::vector< osg::observer_ptr<Collidable> >    Collidables ;
    Collidables m_collidables ;
/* ======================================================================= */
} ;
/* ....................................................................... */
/* ======================================================================= */




} // namespace osgODE




#include "NoGravityVolume.inl"




#endif /* _OSGODE_NOGRAVITYVOLUME_HPP */
