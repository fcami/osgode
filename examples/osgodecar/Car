/*!
 * @file Car
 * @author Rocco Martino
 */
/***************************************************************************
 *   Copyright (C) 2013 by Rocco Martino                                   *
 *   martinorocco@gmail.com                                                *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU Lesser General Public License as        *
 *   published by the Free Software Foundation; either version 2.1 of the  *
 *   License, or (at your option) any later version.                       *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

#ifndef _CAR_HPP
#define _CAR_HPP




#include <osgODE/Container>




namespace osgODE {



class Cylinder ;
class SuspensionJoint ;
class DifferentialJoint ;
class Engine ;




class OSG_EXPORT Car: public Container
{
public:
             Car(void) ;
             Car(const Car& other, const osg::CopyOp& copyop = osg::CopyOp::SHALLOW_COPY) ;

protected:
    virtual ~Car(void) ;

public:
    META_Object(osgODE, Car) ;




    void    init(void) ;




    virtual void    update(double step_size) ;


    void            handleKeyUp(const int& key, const int& mod_key_mask, bool& handled) ;
    void            handleKeyDown(const int& key, const int& mod_key_mask, bool& handled) ;

    inline RigidBody*   getBody(void)
        { return m_body.get() ; }

    inline Engine*      getEngine(void)
        { return m_engine.get() ; }



private:
    double  _computeUnderSteer(void) ;
    SuspensionJoint*    _createSuspension(RigidBody* wheel, const osg::Vec3& axis, osg::Node* graphics) ;


    void    _applyTorque( double step_size ) ;
    void    _applySteer( double step_size ) ;



private:
    osg::ref_ptr<RigidBody>             m_body ;
    osg::ref_ptr<Cylinder>              m_wheel_RL ;
    osg::ref_ptr<Cylinder>              m_wheel_RR ;
    osg::ref_ptr<Cylinder>              m_wheel_FR ;
    osg::ref_ptr<Cylinder>              m_wheel_FL ;
    osg::ref_ptr<SuspensionJoint>       m_hinge_RL ;
    osg::ref_ptr<SuspensionJoint>       m_hinge_RR ;
    osg::ref_ptr<SuspensionJoint>       m_hinge_FR ;
    osg::ref_ptr<SuspensionJoint>       m_hinge_FL ;
    osg::ref_ptr<DifferentialJoint>     m_front_differential ;
    osg::ref_ptr<DifferentialJoint>     m_rear_differential ;

    osg::ref_ptr<Engine>                m_engine ;


    bool    m_steering_left ;
    bool    m_steering_right ;

    double  m_current_steer_angle ;
} ;




} // namespace




#endif /* _CAR_HPP */
