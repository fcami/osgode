SUBDIRS =

EXETARGET = gravity

GRAVITY_SOVERSION = 1

CC = gcc
CXX = g++
LD = ${CXX}
AR = ar -cru
RANLIB = ranlib
CFLAGS = -Wall -ggdb -pipe -O0 -fPIC `ode-config --cflags`
CPPFLAGS = ${CFLAGS} -fno-inline
# CFLAGS = -Wall -pipe -O3 -fPIC
# CPPFLAGS = ${CFLAGS}
CDEFINES = -DOSG_LIBRARY -DGRAVITY_SOVERSION=${GRAVITY_SOVERSION}
LDFLAGS =
LIBS = -losgODEUtil -losgViewer
STATICLIBS =
INCLUDES = -I../
PREFIX = /usr/local/
PACKAGE = gravity
TAR = tar cjf
TARTARGET = gravity



LBITS := $(shell getconf LONG_BIT)

ifeq ($(LBITS), 64)
	CDEFINES += -DIS_X86_64=1
else
	CDEFINES += -DIS_X86_64=0
endif









noinst_HEADERS =    Application.hpp \
                    Scene.hpp \
                    Viewer.hpp 









CPPSOURCES =        Application.cpp \
                    Scene.cpp \
                    Viewer.cpp \
                    main.cpp




OBJECTS =           Application.o \
                    Scene.o \
                    Viewer.o \
                    main.o




EXTRA_DIST =		Makefile




EXTRA_DIRS =




all: ${EXETARGET}




${EXETARGET}: ${OBJECTS}
	@echo " LD	${SHAREDTARGET}"
	@${LD} ${LDFLAGS} -o ${EXETARGET} ${OBJECTS} ${LIBS} ${STATICLIBS}




.c.o:
	@echo " CC	$@"
	@${CC} ${INCLUDES} ${CFLAGS} ${CDEFINES} -c -o $@ $<




.cpp.o:
	@echo " C++	$@"
	@${CXX} ${INCLUDES} ${CPPFLAGS} ${CDEFINES} -c -o $@ $<




clean:
	@echo "Cleaning"
	@rm -f ${OBJECTS} *~ *.pyo *.pyc *.blend1 ${EXETARGET}




distclean: clean




install: all
	@cp -f ${EXETARGET} ${PREFIX}/bin/
	@ldconfig
	@echo "Executable => ${PREFIX}/bin/"




uninstall:
	@rm -f ${PREFIX}/bin//${EXETARGET}
	@echo "Done"
